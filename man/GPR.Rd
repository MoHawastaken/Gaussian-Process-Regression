% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GPRclass.R
\name{GPR}
\alias{GPR}
\title{Predictions and Plots for Gaussian Process Regression}
\usage{
\preformatted{GPR <- GPR$new(X, y, cov_fun, noise)


GPR$predict(X_star, pointwise_var = TRUE)
GPR$plot(testpoints)
}
}
\description{
Implements gaussian processes and gives tools for gaussian process regression and classification problems for given testpoints including clear plots of the results.
}
\section{Arguments}{


  \code{X} matrix of inputs

  \code{y} numeric vector of targets

  \code{cov_fun} the chosen covariance function of the gaussian process

  \code{noise} the inflicted noise of the observations

  \code{X_star} a matrix as the test inputs where every column is one observation.

  \code{testpoints} a matrix of testpoints
}

\section{Methods}{

\code{$predict()} returns a matrix of the expected value of the underlying function f and its variance for the testpoints. If the input is a vector of length n, predict will interpret it as n testpoints. 
For \code{pointwise_var = FALSE} , predict will return the predicted covariance matrix cov(X_star, X_star) instead of only its diagonal.

\code{$plot()} displays the results of the \code{predict} function for all testpoints and confidence regions of two standard deviations in a transparent plot
}

\section{Subclasses}{


GPR has several subclasses where a covariance function k(x,y) is given. The following subclasses are implemented:

\code{GPR <- GPR.constant$new(X, y, c, noise)} with \code{k(x,y) = c}

\code{GPR <- GPR.linear$new(X, y, cov_Fun, noise)} with \code{k(x,y) = sum(sigma * x * y)}

\code{GPR <- GPR.polynomial$new(X, y, sigma, p, noise)} with \code{k(x,y) = (x \%*\% y + sigma)^p}

\code{GPR <- GPR.sqrexp$new(X, y, l, noise)} with \code{k(x,y) = exp(-dist(rbind(x, y))^2/(2 * l^2))}

\code{GPR <- GPR.gammaexp$new(X, y, gamma, l, noise)} with \code{k(x,y) = exp(-(dist(rbind(x, y)) / l) ^ gamma)}

\code{GPR <- GPR.rationalquadratic$new(X, y, alpha, l, noise)} with \code{k(x,y) = (1 + dist(rbind(x, y))^2 / (2 * alpha * l^2))^(-alpha)}
}

\section{Details}{

If own covariance functions are used with GPR, they need to be vectorized.
}

\examples{
Hier Beispiele einfuegen

}
\references{
Rasmussen, Carl E.; Williams, Christopher K. I. (2006).	Gaussian processes for machine learning
}
